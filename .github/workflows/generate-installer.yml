# File: .github/workflows/generate-installer.yml
name: Generate macOS Installer

on:
  workflow_dispatch:
    inputs:
      macos_version:
        type: choice
        description: "macOS Version"
        required: true
        options:
          - Sequoia v15.3.1
          - Sonoma v14.7.4
          - Ventura v13.7.4
          - Monterey v12.7.4
      file:
        type: choice
        description: "File Type"
        required: true
        options:
          - ISO
          - DMG
          - ZIP

run-name: Generate macOS Installer - ${{ github.event.inputs.macos_version }} ${{ github.event.inputs.file }}

env:
  installer_version: ""
  installer_name: ""

jobs:
  build:
    runs-on: macos-latest
    if: github.repository == 'MeeUuuu/Download-macOS'
    steps:
      - uses: actions/checkout@v4
      
      - name: Extract Version Details
        id: extract-details
        run: |
          string="${{ github.event.inputs.macos_version }}"
          echo "installer_version=${string//*v/}" >> $GITHUB_ENV
          echo "installer_name=${string// v*/}" >> $GITHUB_ENV

      - name: Download macOS Installer
        run: |
          softwareupdate --fetch-full-installer --full-installer-version ${{ env.installer_version }}

      - if: github.event.inputs.file == 'dmg'
        name: Generate macOS DMG Installer
        run: |
          sudo hdiutil create -o /tmp/'${{ env.installer_name }}' -size 17500m -volname '${{ env.installer_name }}' -layout SPUD -fs HFS+J
          sudo hdiutil attach /tmp/'${{ env.installer_name }}'.dmg -noverify -mountpoint /Volumes/'${{ env.installer_name }}'
          sleep 15
          sudo /Applications/"Install macOS ${{ env.installer_name }}.app"/Contents/Resources/createinstallmedia --volume /Volumes/'${{ env.installer_name }}' --nointeraction
          
          # 强制卸载流程
          for i in {1..5}; do
              if hdiutil eject -force /Volumes/"Install macOS ${{ env.installer_name }}"; then
                  break
              else
                  echo "卸载失败，尝试终止残留进程..."
                  pgrep -f "Install macOS ${{ env.installer_name }}" | xargs sudo kill -9
                  sleep 5
              fi
          done
          sudo mv /tmp/'${{ env.installer_name }}'.dmg ~/Desktop/'${{ env.installer_name }}'.dmg

      - if: github.event.inputs.file == 'iso'
        name: Generate macOS ISO Installer
        run: |
          # 修正磁盘映像大小为17.5GB（原图中136GB疑似输入错误）
          sudo hdiutil create -o /tmp/'${{ env.installer_name }}' -size 17500m -volname '${{ env.installer_name }}' -layout SPUD -fs HFS+J
          sudo hdiutil attach /tmp/'${{ env.installer_name }}'.dmg -noverify -mountpoint /Volumes/'${{ env.installer_name }}'
          sleep 20
          sudo /Applications/"Install macOS ${{ env.installer_name }}.app"/Contents/Resources/createinstallmedia --volume /Volumes/'${{ env.installer_name }}' --nointeraction
          
          # 增强型等待机制
          echo "等待安装程序完成（最长600秒）..."
          timeout 600 bash -c "
              while pgrep -q 'createinstallmedia'; do
                  sleep 10
              done
          " || echo "警告：安装程序超时，继续流程"
          
          # 多重卸载尝试
          for retry in {1..5}; do
              if hdiutil eject -force /Volumes/"Install macOS ${{ env.installer_name }}"; then
                  break
              else
                  echo "[尝试 $retry/5] 卸载失败，尝试终止占用进程..."
                  sudo lsof +D /Volumes/"Install macOS ${{ env.installer_name }}" || true
                  pgrep -f "Install macOS ${{ env.installer_name }}" | xargs sudo kill -9
                  sleep 10
              fi
          done
          
          # 确保磁盘已卸载
          if mount | grep -q "/Volumes/Install macOS ${{ env.installer_name }}"; then
              echo "错误：无法卸载磁盘！"
              exit 1
          fi
          
          hdiutil convert /tmp/'${{ env.installer_name }}'.dmg -format UDTO -o ~/Desktop/'${{ env.installer_name }}'
          mv -v ~/Desktop/'${{ env.installer_name }}'.cdr ~/Desktop/'${{ env.installer_name }}'.iso
          sudo rm -fv /tmp/'${{ env.installer_name }}'.dmg

      - if: github.event.inputs.file == 'zip'
        name: Generate macOS ZIP Installer
        run: |
          cd /Applications
          zip -r "Install macOS ${{ env.installer_name }}.zip" "Install macOS ${{ env.installer_name }}.app"
          mv -v "Install macOS ${{ env.installer_name }}.zip" ~/Desktop/'${{ env.installer_name }}.zip'

      - name: Upload ${{ github.event.inputs.file }}
        uses: actions/upload-artifact@v4
        with:
          name: macOS ${{ env.installer_name }}
          path: "~/Desktop/${{ env.installer_name }}.${{ github.event.inputs.file }}"
